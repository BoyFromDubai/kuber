# Судя п тому что в задании сказано написать deployment, приложение стейтлесс (иначе было бы сказано написать стейтфулсет).
# Поскольку, цикл по нагрузке дневной, а приложение стейтлесс, то его можно очень легко горизонтально масштабировать. Для этого следует задеплоить HPA. Писать его отдельно сейчас не вижу смысла, поскольку сказано что в дальнейшем потрабление приложение ровное - 100m CPU и 128Mi, а это значит что видимо нужно будет масштабировать его по какой-то другой метрике (как пример количество сообщений в очереди, но это будет видно в дальнейшем)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-deployment
  namespace: {{ .Chart.Name }}
spec:
  maxReplicas: {{ .Values.replicaCount }}
  minReplicas: 3      # 3, потому что в нашем кластере 3 AZ, и чтобы уменьшить latency для клиентов, в каждом из AZ следует задеплоить хотя бы по одному поду
  template:
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          ports:          # скорее всего у пода должен быть открыт какой-то порт, как минимум для проверки хелсчека
            - containerPort: {{ .Values.image.port }}
          startupProbe:
            httpGet:                        # Метод проверки конечно может отличаться в зависимости от приложения, как пример в приложении может быть ручка /health, которая и будет отвечать за проверку хелсчека приложения 
              path: /health
              port: {{ .Values.image.port }}
            initialDelaySeconds: 5        # Нужно для запуска хелсчеков только через 5 секунд после старта контейнера (имеет смысл вставить тк хелсчеки на стартап срабатывают через 10 секунд после старта контейнера, но тк у нас делей 5-10 секунд, то следует сделать как я тут сделал чтобы хелсчеки не рестартовали контейнер постоянно)
          livenessProbe:          # нужна для определения куберу, когда следует рестартовать контейнер (к примеру, если приложение "работает", но лайвнес проба словила дедлок и не сможет в дальнейшем выполнять свои бизнес функции, в таком случае перезапуск контейнера очень поможет)
            httpGet:              # также как и в случае со стартап пробой, это только один из вариантов построения проверки
              path: /health
              port: {{ .Values.image.port }}
            failureThreshold: 1
            periodSeconds: 10
          {{- if .Values.image.resources }}
          resources:
{{ toYaml .Values.image.resources | indent 12 }}
          {{- end }}
